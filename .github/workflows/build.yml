name: build

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - 'v*.*.*'
  pull_request:
  workflow_call:

jobs:
  Build:
    name: ${{ matrix.os-name }} (${{ matrix.compiler }}, ${{ matrix.config }})
    runs-on: ${{ matrix.os-name }}-latest
    strategy:
      fail-fast: false
      matrix:
        name: [windows-msvc, windows-clang, linux-clang, linux-gcc, macos-clang, macos-gcc]
        config: [Release, Debug]
        include:
          - name: windows-msvc
            os-name: windows
            compiler: msvc-17
            cxx: cl
            cc: cl
          - name: windows-clang
            os-name: windows
            compiler: clang-16
            cxx: clang-cl
            cc: clang-cl
          - name: linux-clang
            os-name: linux
            compiler: clang-16
            cxx: clang++
            cc: clang
          - name: linux-gcc
            os-name: linux
            compiler: gcc-13
            cxx: g++
            cc: gcc
          - name: macos-clang
            os-name: macos
            compiler: clang-16
            cxx: clang++
            cc: clang
          - name: macos-gcc
            os-name: macos
            compiler: gcc-13
            cxx: g++
            cc: gcc
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ matrix.os-name == 'windows' }}
          cmake: true
          ninja: true

      - name: Cache Build
        uses: actions/cache@v3
        with:
          path: Build
          key: ${{ matrix.os-name }}-${{ matrix.compiler }}-${{ matrix.config }}-build-${{ secrets.VCACHE}}

      - name: Configure
        run: cmake -GNinja -S . -B Build -DCMAKE_BUILD_TYPE=${{ matrix.config }} -DCMAKE_C_COMPILER=${{ matrix.cc }} -DCMAKE_CXX_COMPILER=${{matrix.cxx}}

      - name: Build
        run: cmake --build Build --config ${{ matrix.config }}

      - name: Upload binaries as artifacts
        uses: actions/upload-artifact@v3
        if: ${{ matrix.config == 'Release' && contains(matrix.compiler, 'clang') }} # Only clang artifacts are stored
        with:
          name: pipe-${{ matrix.os-name }}
          path: Build/Bin

      - name: Run Tests
        if: ${{ matrix.os-name != 'macos' }} # Tests are skipped temporarily on MacOS
        working-directory: ./Build
        run: ctest --output-on-failure -j2 -C ${{ matrix.config }}
