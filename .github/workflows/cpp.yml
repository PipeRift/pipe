name: C++ CI

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

jobs:
  job:
    name: ${{ matrix.os }} Build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        name: [windows-msvc, ubuntu-clang, macos-clang]
        # For Windows msvc, for Linux and macOS let's use the clang compiler.
        include:
          - name: windows-msvc
            os: windows-latest
            cxx: cl.exe
            cc: cl.exe
          - name: ubuntu-clang
            os: ubuntu-latest
            cxx: clang++
            cc: clang
          - name: macos-clang
            os: macos-latest
            cxx: clang++
            cc: clang
        python-version: [3.6]

    steps:
    - name: Install Conan
      run: pip install conan

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Init Submodules
      uses: snickerbockers/submodules-init@v4
    
    - uses: lukka/get-cmake@latest
    
    - uses: ilammy/msvc-dev-cmd@v1
    
    - uses: lukka/set-shell-env@v1
      with:
        CXX: ${{ matrix.cxx }}
        CC: ${{ matrix.cc }}
    
    - name: Configure and Build
      uses: lukka/run-cmake@v2
      with:
        cmakeGenerator: 'Ninja'  
        cmakeListsOrSettingsJson: CMakeListsTxt
        cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
        cmakeAppendedArgs: '-DCMAKE_BUILD_TYPE=Release'
        buildDirectory: '${{ github.workspace }}/Build/'
